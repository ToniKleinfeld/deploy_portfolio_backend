# This file contains security-related NGINX configurations to enhance the security of the web server.

# Block bad bots and IPs (from nginx-security.conf)
if ($bad_bot) { return 444; }
if ($bad_ip) { return 444; }

# MEDIA FILES - NGINX DIRECT SERVING
location /media/ {
    alias /usr/share/nginx/html/media/;
    
    # Security: Only allow specific file types
    location ~* \.(jpg|jpeg|png|gif|webp|svg|mp4|webm|m3u8|ts|pdf|txt)$ {
        # Caching for media files
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # CORS for video/HLS streaming
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Range, Content-Type" always;
        
        # Video streaming optimizations
        add_header Accept-Ranges bytes;
        
        # Enable efficient file serving
        sendfile on;
        sendfile_max_chunk 1m;
        tcp_nopush on;
        tcp_nodelay on;
    }
    
    # Block access to other file types in media
    location ~* \.(php|exe|sh|bat|py|pl|cgi)$ {
        deny all;
        return 444;
    }
    
    # Default: return 404 for unknown files
    try_files $uri =404;
}

# Block sensitive files
location ~ \.(env|git|sql|bak|config|ini|log|backup)$ {
    deny all;
    return 444;
}

# Block exploit paths
location ~* /(wp-|phpmyadmin|phpunit|vendor|cgi-bin|manager|hudson) {
    deny all;
    return 444;
}

# Block binary/malformed requests
location ~* "\\x00" {
    deny all;
    return 444;
}

# Block known bad patterns
location ~* "Gh0st" {
    deny all;
    return 444;
}

# Security headers
add_header X-Frame-Options DENY always;
add_header X-Content-Type-Options nosniff always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;